<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>澈溪</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>越努力，越幸运！</description>
    <pubDate>Fri, 12 Nov 2021 08:25:02 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>稀疏数组与二维数组-java</title>
      <link>http://example.com/2021/11/10/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E4%B8%8E%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84-java/</link>
      <guid>http://example.com/2021/11/10/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E4%B8%8E%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84-java/</guid>
      <pubDate>Wed, 10 Nov 2021 08:54:17 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;1-基本介绍&quot;&gt;&lt;a href=&quot;#1-基本介绍&quot; class=&quot;headerlink&quot; title=&quot;1 . 基本介绍&quot;&gt;&lt;/a&gt;1 . 基本介绍&lt;/h3&gt;&lt;img src=&quot;/2021/11/10/%E7%A8%80%E7%96%8F%E6%95%B0%E7%</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1 . 基本介绍"></a>1 . 基本介绍</h3><img src="/2021/11/10/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E4%B8%8E%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84-java/image-20211111091223408.png" class title="图例"> <blockquote><p><em>当一个数组中大部分元素为0，或者为同一个值得数组时，可以使用稀疏数组来保存该数组。</em></p></blockquote><ol><li>1 . 处理方法</li></ol><blockquote><p>1 . 记录数组中<strong>一共有几行几列，有多少个不同的</strong>值</p><p>2 . 把具有不同值得元素得行列及值记录在一个小规模得数组中从而<strong>缩小程序</strong>得规模</p></blockquote><ol><li>2 . 应用实例</li></ol><blockquote><p>1 . 使用稀疏数组来保存类似于棋盘，地图等二维数组数据等等</p><p>2 . 把二维数组转换稀疏数组存盘，并且可以读取恢复原来得二维数组</p></blockquote><ol><li>3 . 代码实现</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chexi.dsa.sparsearray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 完成稀疏数组读写转换</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chexi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021/11/3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArrayIO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//建立一个二维数组 长度11*11</span></span><br><span class="line">        <span class="keyword">int</span>[][] chessArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        <span class="comment">//初始化二维数组</span></span><br><span class="line">        chessArray[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">        chessArray[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">        chessArray[<span class="number">3</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">        chessArray[<span class="number">4</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//遍历二维数组 看是否正常</span></span><br><span class="line">        System.out.println(<span class="string">&quot;二维数组：~~~~~~~~~~~~~~~~~~~~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : chessArray) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>, anInt);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//拿到二维数组的有效数字个数 以便于创建稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chessArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArray.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArray[i][j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建稀疏数组 初始化稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">0</span>] = chessArray.length;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">1</span>] = chessArray.length;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        <span class="comment">//再次遍历二维数组对有效数字进行稀疏数组赋值</span></span><br><span class="line">        <span class="comment">//定义 计算有效数组及时个数 便于定位稀疏数组行数下标</span></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chessArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArray.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArray[i][j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    index++;</span><br><span class="line">                    sparseArray[index][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArray[index][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArray[index][<span class="number">2</span>] = chessArray[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历稀疏数组看是否转换成功</span></span><br><span class="line">        System.out.println(<span class="string">&quot;稀疏数组：~~~~~~~~~~~~~~~~~~~~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : sparseArray) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>, anInt);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//转换成功对稀疏数组进行写入保存</span></span><br><span class="line">        write(sparseArray);</span><br><span class="line">        <span class="comment">//读取存放稀疏数组文件</span></span><br><span class="line">        <span class="keyword">int</span>[][] read = read(<span class="string">&quot;E:&quot;</span> + File.separator + <span class="string">&quot;leetcode&quot;</span> + File.separator + <span class="string">&quot;IOFile&quot;</span> + File.separator + <span class="string">&quot;chexi.txt&quot;</span>);</span><br><span class="line">        <span class="comment">//将读取到的稀疏数组转为二维数组 拿到稀疏数组的组头二维数组结构</span></span><br><span class="line">        <span class="keyword">int</span>[][] tdArray = <span class="keyword">new</span> <span class="keyword">int</span>[read[<span class="number">0</span>][<span class="number">0</span>]][read[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="comment">//遍历创建空二维数组 看是否正常</span></span><br><span class="line">        System.out.println(<span class="string">&quot;空二维数组：~~~~~~~~~~~~~~~~~~~~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : tdArray) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>, anInt);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历稀疏数组对二维数组进行赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; read.length; i++) &#123;</span><br><span class="line">            tdArray[read[i][<span class="number">0</span>]][read[i][<span class="number">1</span>]] = read[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//再次遍历赋值后二维数组 看是否正常</span></span><br><span class="line">        System.out.println(<span class="string">&quot;赋值后二维数组：~~~~~~~~~~~~~~~~~~~~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : tdArray) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>, anInt);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;大功告成！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 写入稀疏数组</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sparseArray</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span>[][] sparseArray)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;E:&quot;</span> + File.separator + <span class="string">&quot;leetcode&quot;</span> + File.separator + <span class="string">&quot;IOFile&quot;</span> + File.separator + <span class="string">&quot;chexi.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                file.createNewFile();</span><br><span class="line">            &#125;</span><br><span class="line">            OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            <span class="comment">//遍历稀疏数组 拿到值存放到字符串中</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">                String context = sparseArray[i][<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + sparseArray[i][<span class="number">1</span>] + <span class="string">&quot; &quot;</span> + sparseArray[i][<span class="number">2</span>] + <span class="string">&quot;,\r\n&quot;</span>;</span><br><span class="line">                <span class="comment">//换行写入文件中</span></span><br><span class="line">                outputStream.write(context.getBytes());</span><br><span class="line">            &#125;</span><br><span class="line">            outputStream.close();</span><br><span class="line">            System.out.println(<span class="string">&quot;写入成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取稀疏数组 转换为二维数组</span></span><br><span class="line"><span class="comment">     * File.separator 其实 File.separator 的作用相当于 &#x27; \  &#x27; 在 windows 中 文件文件分隔符 用 &#x27; \ &#x27; 或者 &#x27; / &#x27; 都可以</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 所以用 File.separator 保证了在任何系统下不会出错。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] read(String filePath) &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">            String str = <span class="keyword">new</span> String();</span><br><span class="line">            <span class="keyword">while</span> ((len = inputStream.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">//解析数组去除换行符</span></span><br><span class="line">                str = <span class="keyword">new</span> String(bytes, <span class="number">0</span>, len).replaceAll(<span class="string">&quot;\\r|\\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//解析数组到稀疏数组</span></span><br><span class="line">            String[] split = str.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span>[][] tdArray = <span class="keyword">new</span> <span class="keyword">int</span>[split.length][<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; split.length; i++) &#123;</span><br><span class="line">                String[] s1 = split[i].split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                tdArray[i][<span class="number">0</span>] = Integer.valueOf(s1[<span class="number">0</span>]);</span><br><span class="line">                tdArray[i][<span class="number">1</span>] = Integer.valueOf(s1[<span class="number">1</span>]);</span><br><span class="line">                tdArray[i][<span class="number">2</span>] = Integer.valueOf(s1[<span class="number">2</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;读取成功:&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tdArray.length; i++) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t%d\t%d\t\n&quot;</span>, tdArray[i][<span class="number">0</span>], tdArray[i][<span class="number">1</span>], tdArray[i][<span class="number">2</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> tdArray;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：任何复杂程序只要经过研究处理，都会简单，实用化！</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%88%9D%E7%BA%A7-java/">算法与数据结构-初级-java</category>
      
      
      <category domain="http://example.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">算法与数据结构</category>
      
      
      <comments>http://example.com/2021/11/10/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E4%B8%8E%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84-java/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>anotherDay</title>
      <link>http://example.com/2021/11/10/AnotherDay/</link>
      <guid>http://example.com/2021/11/10/AnotherDay/</guid>
      <pubDate>Wed, 10 Nov 2021 07:08:58 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;A-When-you-open-your-eyes-be-glad-for-the-day&quot;&gt;&lt;a href=&quot;#A-When-you-open-your-eyes-be-glad-for-the-day&quot; class=&quot;headerlink&quot; title=&quot;A </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="A-When-you-open-your-eyes-be-glad-for-the-day"><a href="#A-When-you-open-your-eyes-be-glad-for-the-day" class="headerlink" title="A . When you open your eyes be glad for the day !"></a>A . When you open your eyes be glad for the day !</h1><h1 id="B-Make-sure-you-have-ample-time-to-prepare-for-the-new-day-ahead！"><a href="#B-Make-sure-you-have-ample-time-to-prepare-for-the-new-day-ahead！" class="headerlink" title="B . Make sure you have ample time to prepare for the new day ahead！"></a>B . Make sure you have ample time to prepare for the new day ahead！</h1><h1 id="C-Do-you-get-me"><a href="#C-Do-you-get-me" class="headerlink" title="C . Do you get me !"></a>C . Do you get me !</h1><p>​                                                     <em>澈溪，因你而生</em></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/anotherDay/">anotherDay</category>
      
      
      <category domain="http://example.com/tags/Blog%EF%BC%8CGo%EF%BC%81/">Blog，Go！</category>
      
      
      <comments>http://example.com/2021/11/10/AnotherDay/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
